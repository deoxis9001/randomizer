//starting flags etc
PUSH; ORG $7C480; jumpToHack(newGame); POP
ALIGN 4
newGame:
#incbin "asm/newGame.dmp"
POIN newGameTable
POIN newGameOrTable
POIN newGameAndTable
POIN ($7C480+10)|1

ALIGN 4
newGameTable:
//WORD source destination ammountofbytes
POIN elements;		WORD 0x2002A60 1
POIN map;			WORD 0x2002A80 3
POIN windCrest;		WORD 0x2002A83 1
POIN spawnPoint;	WORD 0x2002AC8 8
POIN worldmap;		WORD 0x2002ADC 4
POIN canOpenMenu;	WORD 0x2002B32 1
POIN fastShell;		WORD 0x2002B41 1
POIN haveMap;		WORD 0x2002B43 1
POIN fastItems;		WORD 0x2002B46 5
POIN fastBombArrow;	WORD 0x2002B4D 1
POIN kinstoneBag;	WORD 0x2002B4B 1
POIN fusionFlags;	WORD 0x2002C81 13
POIN startingFlags;	WORD 0x2002C9C 116
POIN dungeonPortal;	WORD 0x2002EBD 6
#ifndef requirementFigurinesAmount
	POIN figurines;		WORD 0x2002B0E 18
#endif
#ifdef openWorld
	POIN visit;			WORD 0x2002AA0 4
	POIN grave;			WORD 0x2002B41 1
#endif
#ifdef enable_firerod_start
	POIN firerod;		WORD 0x2002B37 1
	POIN firerodOnA;	WORD 0x2002AF4 1
#endif
#ifdef DEBUG
	POIN DEBUGITEMS;	WORD 0x2002B32 7
	POIN DEBUGUPGRADES;	WORD 0x2002B3F 7
	POIN DEBUGSTUFF;	WORD 0x2002AE8 7
	POIN DEBUGWIND;		WORD 0x2002A83 1
#endif
#ifdef disableKinstoneDrops
	POIN disableKinstones;		WORD 0x2002B56 1
#endif
#ifdef disableShellDrops
	POIN disableShells;			WORD 0x2002AFB 1
#endif
#ifdef timedohkoClock
	POIN timedohkoStartingTime;	WORD 0x203FFE0 4
#endif
#ifdef startInventoryFourSword
	POIN fourSwordClonesStart; WORD 0x203FE00+(10*2) 1
#else
	#ifdef startInventoryBlueSword
		POIN blueSwordClonesStart; WORD 0x203FE00+(10*2) 1
	#else
		#ifdef startInventoryRedSword
			POIN redSwordClonesStart; WORD 0x203FE00+(10*2) 1
		#endif
	#endif
#endif
#ifdef startInventoryBombBags
	POIN bombBagCountStart; WORD 0x2002AEE 1
	POIN gentariCurtainStart; WORD 0x2002CEC 1
#endif
#ifdef startInventoryBombs
	POIN bombCountStart; WORD 0x2002AEC 1
#endif
#ifdef startInventoryQuivers
	POIN quiverCountStart; WORD 0x2002AEF 1
#endif
#ifdef startInventoryArrows
	POIN arrowCountStart; WORD 0x2002AED 1
#endif
#ifdef startInventoryWallets
	POIN walletCountStart; WORD 0x2002AE8 1
#endif
#ifdef startInventoryBottle1
	POIN bottleContent1Start; WORD 0x2002AF6 1
	#ifdef startInventoryBottle2
		POIN bottleContent2Start; WORD 0x2002AF7 1
		#ifdef startInventoryBottle3
			POIN bottleContent3Start; WORD 0x2002AF8 1
			#ifdef startInventoryBottle4
				POIN bottleContent4Start; WORD 0x2002AF9 1
			#endif
		#endif
	#endif
#endif
//the only point of this macro and the temp define is so ColorzCore does not give us a warning log message for redefining kinstoneIndex
#define incrementKinstoneIndex "#define temp kinstoneIndex+1; #undef kinstoneIndex; #define kinstoneIndex temp; #undef temp"
#define kinstoneIndex 0
//we are putting in green kinstones first and gold last just so the more common ones are generally more near the top in the fuse menu
#ifdef startInventoryKinstonesGreenC
	POIN kinstonesGreenCType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGreenCStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesGreenG
	POIN kinstonesGreenGType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGreenGStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesGreenP
	POIN kinstonesGreenPType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGreenPStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesBlueL
	POIN kinstonesBlueLType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesBlueLStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesBlueS
	POIN kinstonesBlueSType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesBlueSStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesRedW
	POIN kinstonesRedWType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesRedWStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesRedV
	POIN kinstonesRedVType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesRedVStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesRedE
	POIN kinstonesRedEType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesRedEStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesGoldCloud
	POIN kinstonesGoldCloudType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGoldCloudStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesGoldSwamp
	POIN kinstonesGoldSwampType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGoldSwampStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#ifdef startInventoryKinstonesGoldFalls
	POIN kinstonesGoldFallsType; WORD 0x2002B58+kinstoneIndex 1
	POIN kinstonesGoldFallsStart; WORD 0x2002B6B+kinstoneIndex 1
	incrementKinstoneIndex
#endif
#undef kinstoneIndex
#undef incrementKinstoneIndex
WORD 0 0 0 //terminator

ALIGN 4
newGameOrTable:
#ifdef kinstonePots
	POIN potHearth;		WORD 0x2002CE0 1
	POIN potToD;		WORD 0x2002D8B 1
#endif
#ifdef specialPots
	POIN potLonLon;		WORD 0x2002CE5 1
	POIN potsFoW;		WORD 0x2002D06 1
#endif
#ifdef kinstoneDig
	POIN cloudsDig;		WORD 0x2002CD8 2
	POIN melariDig;		WORD 0x2002CF3 2
#endif
#ifdef kinstoneWater
	POIN swampUnderwater;	WORD 0x2002CC0 1
#endif
#ifdef lakeHPWater
	POIN lakeUnderwater;	WORD 0x2002CBD 1
#endif
#ifdef todKeyWater
	POIN todUnderwater;		WORD 0x2002D93 1
#endif
#ifdef goldTornado
	POIN tornadoGold;			WORD 0x2002CA0 1
#endif
POIN cuccoGame;		WORD 0x2002CA5 1
POIN stoneNPCs;		WORD 0x2002DC6 1
#ifdef openWindTribe
	POIN windTribeOpen;			WORD 0x2002CA7 1
#endif
#ifdef openTingleBrothers
	POIN tingleBrothersOpen;	WORD 0x2002CA7 1
#endif
#ifdef openLibrary
	POIN libraryOpen;			WORD 0x2002CA1 1
#endif
#ifdef blueGinaGrave
	POIN ginaGraveBlue;			WORD 0x2002CC6 1
#endif
#ifdef redCrenelBeanstalk
	POIN crenelBeanstalkRed;	WORD 0x2002CD1 1
#endif
#ifdef redRuinsBeanstalk
	POIN ruinsBeanstalkRed;		WORD 0x2002CD1 1
#endif
#ifdef blueHyliaBeanstalk
	POIN hyliaBeanstalkBlue;	WORD 0x2002CD1 1
#endif
#ifdef blueHillsBeanstalk
	POIN hillsBeanstalkBlue;	WORD 0x2002CD2 1
#endif
#ifdef blueWoodsBeanstalk
	POIN woodsBeanstalkBlue;	WORD 0x2002CD2 1
#endif
//POIN gibdosCrypt;	WORD 0x2002CFF 1 // 0x02
#ifdef cryptSecondKeyBlock
	POIN secondKeyBlockCrypt;	WORD 0x2002D00 1
#endif
#ifdef cryptFirstKeyBlock
	POIN firstKeyBlockCrypt;	WORD 0x2002D01 1
#endif
#ifdef cryptLockedDoor
	POIN lockedDoorCrypt;		WORD 0x2002D12 1
#endif
#ifdef dwsMadderpillarDoor
	POIN madderpillarDoorDWS;		WORD 0x2002D3F 1
#endif
#ifdef dwsBarrelEastLockedDoor
	POIN barrelEastLockedDoorDWS;	WORD 0x2002D41 1
#endif
#ifdef dwsSlugRoomLockedDoor
	POIN slugRoomLockedDoorDWS;		WORD 0x2002D43 1
#endif
#ifdef dwsBasementLockedDoor
	POIN basementLockedDoorDWS;		WORD 0x2002D44 1
#endif
#ifdef dwsBigDoor
	POIN bigDoorDWS;				WORD 0x2002D45 1
#endif
#ifdef cofBlueWarpLockedDoor
	POIN blueWarpLockedDoorCoF;	WORD 0x2002D56 1
#endif
#ifdef cofMinecartLockedDoor
	POIN minecartLockedDoorCoF;	WORD 0x2002D57 1
#endif
#ifdef cofBigDoor
	POIN bigDoorCoF;			WORD 0x2002D5A 1
#endif
#ifdef fowFinalLockedDoor
	POIN finalLockedDoorFoW;		WORD 0x2002D6F 1
#endif
#ifdef fowBigDoor
	POIN bigDoorFoW;				WORD 0x2002D70 1
#endif
#ifdef fowStatueLockedDoor
	POIN statueLockedDoorFoW;		WORD 0x2002D71 1
#endif
#ifdef fowLeftLockedDoor
	POIN leftLockedDoorFoW;			WORD 0x2002D72 1
#endif
#ifdef fowRightLockedDoor
	POIN rightLockedDoorFoW;		WORD 0x2002D72 1
#endif
#ifdef todEntranceLockedDoor
	POIN entranceLockedDoorToD;	WORD 0x2002D89 1
#endif
#ifdef todBigDoor
	POIN bigDoorToD;			WORD 0x2002D89 1
#endif
#ifdef todLilypadLockedDoor
	POIN lilypadLockedDoorToD;	WORD 0x2002D8A 1
#endif
#ifdef todBlueChuLockedDoor
	POIN blueChuLockedDoorToD;	WORD 0x2002D8C 1
#endif
#ifdef todDarkRoomLockedDoor
	POIN darkRoomLockedDoorToD;	WORD 0x2002D90 1
#endif
#ifdef powFinalBigDoor
	POIN finalBigDoorPoW;			WORD 0x2002DA2 1
#endif
#ifdef powFan2LockedDoor
	POIN fan2LockedDoorPoW;			WORD 0x2002DA3 1
#endif
#ifdef powFan1LockedDoor
	POIN fan1LockedDoorPoW;			WORD 0x2002DA3 1
#endif
#ifdef pow1stBigDoor
	POIN firstBigDoorPoW;			WORD 0x2002DA4 1
#endif
#ifdef powLastLockedDoor
	POIN lastLockedDoorPoW;			WORD 0x2002DA5 1
#endif
#ifdef powRedWarpLockedDoor
	POIN redWarpLockedDoorPoW;		WORD 0x2002DA5 1
#endif
#ifdef powFirstLockedDoor
	POIN firstLockedDoorPoW;		WORD 0x2002DA6 1
#endif
#ifdef powPeahatLockedDoor
	POIN peahatLockedDoorPoW;		WORD 0x2002DA9 1
#endif
#ifdef dhcLockedDoor
	POIN lockedDoorDHC;					WORD 0x2002DBB 1
#endif
#ifdef dhcTopKeyBlock
	POIN topKeyBlockDHC;				WORD 0x2002DBC 1
#endif
#ifdef dhcTopMiddleKeyBlock
	POIN topMiddleKeyBlockDHC;			WORD 0x2002DBC 1
#endif
#ifdef dhcBottomMiddleKeyBlock
	POIN bottomMiddleKeyBlockDHC;		WORD 0x2002DBC 1
#endif
#ifdef dhcBottomKeyBlock
	POIN bottomKeyBlockDHC;				WORD 0x2002DBC 1
#endif
#ifdef dhcBigDoor
	POIN bigDoorDHC;					WORD 0x2002DBE 1
#endif
#ifdef mapkeasy
	POIN dungeonmap;	WORD 0x2002EAD 6
#endif
#ifdef compasskeasy
	POIN compass;		WORD 0x2002EAD 6
#endif

POIN bluePortalSwitchDWS;	WORD 0x2002D3F 1
POIN redPortalSwitchDWS;	WORD 0x2002D43 1
POIN bluePortalSwitch2DWS;	WORD 0x2002D46 1
POIN bluePortalSwitch2COF;	WORD 0x2002D56 1
POIN bluePortalSwitchCOF;	WORD 0x2002D5B 1
POIN redPortalSwitchCOF;	WORD 0x2002D5A 1
POIN redPortalSwitchFOW;	WORD 0x2002D70 1
POIN redPortalSwitchTOD;	WORD 0x2002D92 1
POIN redPortalSwitch2POW;	WORD 0x2002DA5 1
POIN redPortalSwitchPOW;	WORD 0x2002DAC 1
POIN dhcRemovedDoor;	WORD 0x2002DC1 1

#ifdef openWorld
	POIN worldOpen;	WORD 0x2002C9C 308
#endif

#ifdef startInventorySmithSword
	POIN smithSwordStart; WORD 0x2002B32 1
#endif
#ifdef startInventoryGreenSword
	POIN greenSwordStart; WORD 0x2002B32 1
#endif
#ifdef startInventoryRedSword
	POIN redSwordStart; WORD 0x2002B32 1
#endif
#ifdef startInventoryBlueSword
	POIN blueSwordStart; WORD 0x2002B33 1
#endif
#ifdef startInventoryFourSword
	POIN fourSwordStart; WORD 0x2002B33 1
#endif
#ifdef startInventoryRemoteBombs
	POIN remoteBombsStart; WORD 0x2002B34 1
#endif
#ifdef startInventoryBow
	POIN bowStart; WORD 0x2002B34 1
#endif
#ifdef startInventoryLightArrows
	POIN lightArrowsStart; WORD 0x2002B34 1
#endif
#ifdef startInventoryBoomerang
	POIN boomerangStart; WORD 0x2002B34 1
#endif
#ifdef startInventoryMagicBoomerang
	POIN magicBoomerangStart; WORD 0x2002B35 1
#endif
#ifdef startInventoryShield
	POIN shieldStart; WORD 0x2002B35 1
	POIN shieldShopStart; WORD 0x2002EA6 1
#endif
#ifdef startInventoryMirrorShield
	POIN mirrorShieldStart; WORD 0x2002B35 1
	POIN shieldShopStart; WORD 0x2002EA6 1
	POIN mirrorShieldShopStart; WORD 0x2002EA7 1
#endif
#ifdef startInventoryLantern
	POIN lanternStart; WORD 0x2002B35 1
#endif
#ifdef startInventoryGustJar
	POIN gustJarStart; WORD 0x2002B36 1
#endif
#ifdef startInventoryPacci
	POIN pacciStart; WORD 0x2002B36 1
	POIN stairsDogStart; WORD 0x2002CD5 1
#endif
#ifdef startInventoryMoleMitts
	POIN moleMittsStart; WORD 0x2002B36 1
#endif
#ifdef startInventoryCape
	POIN capeStart; WORD 0x2002B37 1
	POIN spinSoldierStart; WORD 0x2002CD5 1
	POIN stairsDogStart; WORD 0x2002CD5 1
#endif
#ifdef startInventoryBoots
	POIN bootsStart; WORD 0x2002B37 1
#endif
#ifdef startInventoryOcarina
	POIN ocarinaStart; WORD 0x2002B37 1
	POIN libraryStart; WORD 0x2002CA1 1
	#ifdef minishCrestFlag
		POIN gentariCurtainStart; WORD 0x2002CEC 1
	#endif
#endif
#ifdef startInventoryEarthElement
	POIN earthElementStart; WORD 0x2002B42 1
#endif
#ifdef startInventoryFireElement
	POIN fireElementStart; WORD 0x2002B42 1
#endif
#ifdef startInventoryWaterElement
	POIN waterElementStart; WORD 0x2002B42 1
#endif
#ifdef startInventoryWindElement
	POIN windElementStart; WORD 0x2002B42 1
#endif
#ifdef startInventoryDogFood
	POIN dogFoodStart; WORD 0x2002B3F 1
#endif
#ifdef startInventoryRanchKey
	POIN ranchKeyStart; WORD 0x2002B3F 1
#endif
#ifdef startInventoryMushroom
	POIN mushroomStart; WORD 0x2002B40 1
#endif
#ifdef startInventoryBook1
	POIN book1Start; WORD 0x2002B40 1
#endif
#ifdef startInventoryBook2
	POIN book2Start; WORD 0x2002B40 1
#endif
#ifdef startInventoryBook3
	POIN book3Start; WORD 0x2002B40 1
#endif
#ifdef startInventoryGraveyardKey
	POIN graveyardKeyStart; WORD 0x2002B41 1
#endif
#ifdef startInventoryTingleTrophy
	POIN tingleTrophyStart; WORD 0x2002B41 1
#endif
#ifdef startInventoryCarlovMedal
	POIN carlovMedalStart; WORD 0x2002B41 1
	POIN carlovMedalHouseStart; WORD 0x2002CD5 1
#endif
#ifdef startInventoryGripRing
	POIN gripRingStart; WORD 0x2002B43 1
#endif
#ifdef startInventoryPowerBracelets
	POIN powerBraceletsStart; WORD 0x2002B43 1
#endif
#ifdef startInventoryFlippers
	POIN flippersStart; WORD 0x2002B43 1
	POIN spinSoldierStart; WORD 0x2002CD5 1
	POIN festariStart; WORD 0x2002CEC 1
	POIN stairsDogStart; WORD 0x2002CD5 1
#endif
#ifdef startInventoryJabberNut
	POIN jabberNutStart; WORD 0x2002B48 1
	POIN festariStart; WORD 0x2002CEC 1
#endif
#ifdef startInventoryScrollSpin
	POIN scrollSpinStart; WORD 0x2002B44 1
#endif
#ifdef startInventoryScrollRoll
	POIN scrollRollStart; WORD 0x2002B44 1
#endif
#ifdef startInventoryScrollDash
	POIN scrollDashStart; WORD 0x2002B44 1
#endif
#ifdef startInventoryScrollRock
	POIN scrollRockStart; WORD 0x2002B44 1
#endif
#ifdef startInventoryScrollSwordBeam
	POIN scrollSwordBeamStart; WORD 0x2002B45 1
#endif
#ifdef startInventoryScrollGreatSpin
	POIN scrollGreatSpinStart; WORD 0x2002B45 1
#endif
#ifdef startInventoryScrollDownThrust
	POIN scrollDownThrustStart; WORD 0x2002B45 1
#endif
#ifdef startInventoryScrollPerilBeam
	POIN scrollPerilBeamStart; WORD 0x2002B45 1
#endif
#ifdef startInventoryScrollFastSpin
	POIN scrollFastSpinStart; WORD 0x2002B4E 1
#endif
#ifdef startInventoryScrollFastSplit
	POIN scrollFastSplitStart; WORD 0x2002B4F 1
#endif
#ifdef startInventoryScrollLongSpin
	POIN scrollLongSpinStart; WORD 0x2002B4F 1
#endif
#ifdef startInventoryArrowButterfly
	POIN arrowButterflyStart; WORD 0x2002B4E 1
#endif
#ifdef startInventoryDigButterfly
	POIN digButterflyStart; WORD 0x2002B4E 1
#endif
#ifdef startInventorySwimButterfly
	POIN swimButterflyStart; WORD 0x2002B4E 1
#endif
#ifdef startInventoryBombBags
	POIN bombsStart; WORD 0x2002B33 1
	POIN bombBagStart; WORD 0x2002B4B 1
#endif
#ifdef startInventoryQuivers
	POIN quiverStart; WORD 0x2002B4B 1
#endif
#ifdef startInventoryWallets
	POIN walletStart; WORD 0x2002B4B 1
#endif
#ifdef startInventoryBottle1
	POIN bottle1Start; WORD 0x2002B39 1
	#ifdef startInventoryBottle2
		POIN bottle2Start; WORD 0x2002B39 1
		#ifdef startInventoryBottle3
			POIN bottle3Start; WORD 0x2002B39 1
			#ifdef startInventoryBottle4
				POIN bottle4Start; WORD 0x2002B39 1
			#endif
		#endif
	#endif
#endif
WORD 0 0 0 //terminator

ALIGN 4
newGameAndTable:
WORD 0 0 0 //terminator

#ifdef DEBUG
	DEBUGITEMS:
	BYTE 0x55 0x55 0x55 0x55 0x54 0x55 0x55 0x55
	DEBUGUPGRADES:
	BYTE 0x55 0x55 0x55 0x55 0x55 0x55 0x55 0x55
	DEBUGSTUFF:
	BYTE 3 0 0xA0 0xA0 99 99 3 3
	DEBUGWIND:
	BYTE 0xFF
#endif

ALIGN 4
spawnPoint:
BYTE 0x22 /*area*/ 0x15 /*room*/ 4 /*facing direction*/ 0 /*transition type*/; SHORT 0x58 /*x*/ 0x38 /*y*/

canOpenMenu:
BYTE 1

windCrest:
BYTE (crenelCrest | fallsCrest | cloudCrest | townCrest | lakeCrest | swampCrest | southCrest | minishCrest)
	
haveMap:
BYTE 0x40

fastItems:
BYTE 0x55 0x55 0x05 0x55 0x55 //remove the messages when picking small stuff for the first time

fastBombArrow:
BYTE 0x55 //remove the messages when picking 10 or 30 bombs or arrows for the first time

fastShell:
BYTE 0x40 //remove the messages when picking shells for the first time

fusionFlags:
BYTE mC81 mC82 mC83 mC84 mC85 mC86 mC87 mC88 mC89 mC8A mC8B mC8C mC8D

kinstoneBag:
BYTE 0x40

disableKinstones:
BYTE 0x01

figurines:
BYTE 0xFE 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x01

ALIGN 4
worldmap:
SHORT 0x860 0xB3E

elements:
BYTE 0x1E

map:
BYTE 0xFF 0xFF 0x01

visit:
BYTE 0xFE 0xFF 0x7F 0x7F

//open the graveyard if enabled
grave:
BYTE 0x02

dungeonmap:
BYTE 0x01 0x01 0x01 0x01 0x01 0x01

compass:
BYTE 0x02 0x02 0x02 0x02 0x02 0x02

disableShells:
BYTE 1

firerod:
BYTE 0x10

firerodOnA:
BYTE 0x16

//set location flag to prevent item from being collectable
potHearth:
BYTE 0x80

potLonLon:
BYTE 0x20

potsFoW:
BYTE 0x18

potToD:
BYTE 0x02

cloudsDig:
BYTE 0xFC 0x01

melariDig:
BYTE 0x4A 0x01

swampUnderwater:
BYTE 0x1C

lakeUnderwater:
BYTE 0x02

todUnderwater:
BYTE 0x04


//Other Fusion flags
tornadoGold:
BYTE 0x10

windTribeOpen:
BYTE 0x01

tingleBrothersOpen:
BYTE 0x10

libraryOpen:
BYTE 0x02

ginaGraveBlue:
BYTE 0x20

crenelBeanstalkRed:
BYTE 0x20

ruinsBeanstalkRed:
BYTE 0x80

hyliaBeanstalkBlue:
BYTE 0x40

hillsBeanstalkBlue:
BYTE 0x01

woodsBeanstalkBlue:
BYTE 0x02

// unfreeze stone guards and minister
stoneNPCs:
BYTE 0x38

//Key doors/blocks
secondKeyBlockCrypt:
BYTE 0x80
	
firstKeyBlockCrypt:
BYTE 0x01
	
lockedDoorCrypt:
BYTE 0x08
	
madderpillarDoorDWS:
BYTE 0x40
	
barrelEastLockedDoorDWS:
BYTE 0x04
	
slugRoomLockedDoorDWS:
BYTE 0x10
	
basementLockedDoorDWS:
BYTE 0x20
	
bigDoorDWS:
BYTE 0x02
	
blueWarpLockedDoorCoF:
BYTE 0x10
	
minecartLockedDoorCoF:
BYTE 0x20
	
bigDoorCoF:
BYTE 0x40
	
finalLockedDoorFoW:
BYTE 0x20
	
bigDoorFoW:
BYTE 0x40
	
statueLockedDoorFoW:
BYTE 0x10
	
leftLockedDoorFoW:
BYTE 0x40
	
rightLockedDoorFoW:
BYTE 0x80
	
entranceLockedDoorToD:
BYTE 0x04

bigDoorToD:
BYTE 0x10

lilypadLockedDoorToD:
BYTE 0x01

blueChuLockedDoorToD:
BYTE 0x02
	
darkRoomLockedDoorToD:
BYTE 0x08

finalBigDoorPoW:
BYTE 0x40

fan2LockedDoorPoW:
BYTE 0x10

fan1LockedDoorPoW:
BYTE 0x80

firstBigDoorPoW:
BYTE 0x04

lastLockedDoorPoW:
BYTE 0x04

redWarpLockedDoorPoW:
BYTE 0x08

firstLockedDoorPoW:
BYTE 0x08

peahatLockedDoorPoW:
BYTE 0x04

lockedDoorDHC:
BYTE 0x20

topKeyBlockDHC:
BYTE 0x10

topMiddleKeyBlockDHC:
BYTE 0x20

bottomMiddleKeyBlockDHC:
BYTE 0x40

bottomKeyBlockDHC:
BYTE 0x80

bigDoorDHC:
BYTE 0x20

dhcRemovedDoor:
BYTE 0x04

//Dungeon Portals

bluePortalSwitchDWS:
BYTE (dwsBluePortal << 5)

bluePortalSwitch2DWS:
BYTE (dwsBluePortal << 4)

redPortalSwitchDWS:
BYTE (dwsRedPortal << 5)

bluePortalSwitchCOF:
BYTE (cofBluePortal << 3)

bluePortalSwitch2COF:
BYTE (cofBluePortal << 5)

redPortalSwitchCOF:
BYTE (cofRedPortal << 4)

redPortalSwitchFOW:
BYTE (fowRedPortal << 4)

redPortalSwitchTOD:
BYTE (todRedPortal >> 1)

redPortalSwitchPOW:
BYTE (powRedPortal << 5)

redPortalSwitch2POW:
BYTE ( (powRedPortal << 5) | (powRedPortal << 4) )

dungeonPortal:
BYTE (dwsBluePortal | dwsRedPortal) (cofBluePortal | cofRedPortal) (fowBluePortal | fowRedPortal) (todBluePortal | todRedPortal) (powBluePortal | powRedPortal) (dhcBluePortal | dhcRedPortal) 

//Starting inventory

redSwordClonesStart:
BYTE 0x01

blueSwordClonesStart:
BYTE 0x02

fourSwordClonesStart:
BYTE 0x03

bombBagCountStart:
#ifndef startInventoryBombBags
	#define startInventoryBombBags 0
#endif
BYTE startInventoryBombBags

bombCountStart:
#ifndef startInventoryBombs
	#define startInventoryBombs 0
#endif
BYTE startInventoryBombs

quiverCountStart:
#ifndef startInventoryQuivers
	#define startInventoryQuivers 0
#endif
BYTE startInventoryQuivers

arrowCountStart:
#ifndef startInventoryArrows
	#define startInventoryArrows 0
#endif
BYTE startInventoryArrows

walletCountStart:
#ifndef startInventoryWallets
	#define startInventoryWallets 0
#endif
BYTE startInventoryWallets

bottleContent1Start:
#ifndef startInventoryBottleContent1
	#define startInventoryBottleContent1 0x20
#endif
BYTE startInventoryBottleContent1

bottleContent2Start:
#ifndef startInventoryBottleContent2
	#define startInventoryBottleContent2 0x20
#endif
BYTE startInventoryBottleContent2

bottleContent3Start:
#ifndef startInventoryBottleContent3
	#define startInventoryBottleContent3 0x20
#endif
BYTE startInventoryBottleContent3

bottleContent4Start:
#ifndef startInventoryBottleContent4
	#define startInventoryBottleContent4 0x20
#endif
BYTE startInventoryBottleContent4

kinstonesGoldCloudType:
BYTE 0x65

kinstonesGoldCloudStart:
#ifndef startInventoryKinstonesGoldCloud
	#define startInventoryKinstonesGoldCloud 0
#endif
BYTE startInventoryKinstonesGoldCloud

kinstonesGoldSwampType:
BYTE 0x6A

kinstonesGoldSwampStart:
#ifndef startInventoryKinstonesGoldSwamp
	#define startInventoryKinstonesGoldSwamp 0
#endif
BYTE startInventoryKinstonesGoldSwamp

kinstonesGoldFallsType:
BYTE 0x6D

kinstonesGoldFallsStart:
#ifndef startInventoryKinstonesGoldFalls
	#define startInventoryKinstonesGoldFalls 0
#endif
BYTE startInventoryKinstonesGoldFalls

kinstonesRedWType:
BYTE 0x6E

kinstonesRedWStart:
#ifndef startInventoryKinstonesRedW
	#define startInventoryKinstonesRedW 0
#endif
BYTE startInventoryKinstonesRedW

kinstonesRedVType:
BYTE 0x6F

kinstonesRedVStart:
#ifndef startInventoryKinstonesRedV
	#define startInventoryKinstonesRedV 0
#endif
BYTE startInventoryKinstonesRedV

kinstonesRedEType:
BYTE 0x70

kinstonesRedEStart:
#ifndef startInventoryKinstonesRedE
	#define startInventoryKinstonesRedE 0
#endif
BYTE startInventoryKinstonesRedE

kinstonesBlueLType:
BYTE 0x71

kinstonesBlueLStart:
#ifndef startInventoryKinstonesBlueL
	#define startInventoryKinstonesBlueL 0
#endif
BYTE startInventoryKinstonesBlueL

kinstonesBlueSType:
BYTE 0x72

kinstonesBlueSStart:
#ifndef startInventoryKinstonesBlueS
	#define startInventoryKinstonesBlueS 0
#endif
BYTE startInventoryKinstonesBlueS

kinstonesGreenCType:
BYTE 0x73

kinstonesGreenCStart:
#ifndef startInventoryKinstonesGreenC
	#define startInventoryKinstonesGreenC 0
#endif
BYTE startInventoryKinstonesGreenC

kinstonesGreenGType:
BYTE 0x74

kinstonesGreenGStart:
#ifndef startInventoryKinstonesGreenG
	#define startInventoryKinstonesGreenG 0
#endif
BYTE startInventoryKinstonesGreenG

kinstonesGreenPType:
BYTE 0x75

kinstonesGreenPStart:
#ifndef startInventoryKinstonesGreenP
	#define startInventoryKinstonesGreenP 0
#endif
BYTE startInventoryKinstonesGreenP

smithSwordStart:
BYTE 0x04

greenSwordStart:
BYTE 0x10

redSwordStart:
BYTE 0x40

blueSwordStart:
BYTE 0x01

fourSwordStart:
BYTE 0x10

remoteBombsStart:
BYTE 0x01

bowStart:
BYTE 0x04

lightArrowsStart:
BYTE 0x10

boomerangStart:
BYTE 0x40

magicBoomerangStart:
BYTE 0x01

shieldStart:
BYTE 0x04

mirrorShieldStart:
BYTE 0x10

shieldShopStart:
BYTE 0x80

mirrorShieldShopStart:
BYTE 0x40

lanternStart:
BYTE 0x40

gustJarStart:
BYTE 0x04

pacciStart:
BYTE 0x10

moleMittsStart:
BYTE 0x40

capeStart:
BYTE 0x01

bootsStart:
BYTE 0x04

ocarinaStart:
BYTE 0x40

libraryStart:
BYTE 0x02

bombsStart:
BYTE 0x40

bombBagStart:
BYTE 0x04

gentariCurtainStart:
BYTE 0x08

quiverStart:
BYTE 0x10

walletStart:
BYTE 0x01

bottle1Start:
BYTE 0x01

bottle2Start:
BYTE 0x04

bottle3Start:
BYTE 0x10

bottle4Start:
BYTE 0x40

earthElementStart:
BYTE 0x01

fireElementStart:
BYTE 0x04

waterElementStart:
BYTE 0x10

windElementStart:
BYTE 0x40

dogFoodStart:
BYTE 0x10

ranchKeyStart:
BYTE 0x40

mushroomStart:
BYTE 0x01

book1Start:
BYTE 0x04

book2Start:
BYTE 0x10

book3Start:
BYTE 0x40

graveyardKeyStart:
BYTE 0x01

tingleTrophyStart:
BYTE 0x04

carlovMedalStart:
BYTE 0x10

carlovMedalHouseStart:
BYTE 0x40

gripRingStart:
BYTE 0x01

powerBraceletsStart:
BYTE 0x04

flippersStart:
BYTE 0x10

spinSoldierStart:
BYTE 0x08

festariStart:
BYTE 0x04

stairsDogStart:
BYTE 0x10

jabberNutStart:
BYTE 0x40

scrollSpinStart:
BYTE 0x01

scrollRollStart:
BYTE 0x04

scrollDashStart:
BYTE 0x10

scrollRockStart:
BYTE 0x40

scrollSwordBeamStart:
BYTE 0x01

scrollGreatSpinStart:
BYTE 0x04

scrollDownThrustStart:
BYTE 0x10

scrollPerilBeamStart:
BYTE 0x40

scrollFastSpinStart:
BYTE 0x40

scrollFastSplitStart:
BYTE 0x01

scrollLongSpinStart:
BYTE 0x04

arrowButterflyStart:
BYTE 0x01

digButterflyStart:
BYTE 0x04

swimButterflyStart:
BYTE 0x10

// Set flags for Cucco Minigame
#ifndef cuccoSkippedLevels
	#define cuccoSkippedLevels 9
#endif
#ifndef cuccoHeartPieceFlag
	#define cuccoHeartPieceFlag 0
#endif
cuccoGame:
BYTE ( (cuccoSkippedLevels << 3) | (cuccoHeartPieceFlag << 7) )

startingFlags:
	//                 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x0A 0x0B 0x0C 0x0D 0x0E 0x0F
	/*0x2002C9C*/                                                             BYTE 0x00 0x00 0x38 0xC0
	/*0x2002CA0*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x06 0x0C 0xC0 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002CB0*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x3E 0x00 0x30 mCBF
	/*0x2002CC0*/ BYTE 0x00 0x00 0x00 0x24 0x00 0x00 0x00 0x08 0x00 0x08 0x00 0x00 0x00 0x06 0x00 0x48
	/*0x2002CD0*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x04 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002CE0*/ BYTE 0x00 0x00 0x00 0x00 0x40 0x00 0x10 0x50 0x13 0x04 0x00 0xC0 0x03 0xA0 0x00 0x00
	/*0x2002CF0*/ BYTE 0x00 0x00 0x02 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002D00*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x2E 0x00 0x00 0x00 0x00

worldOpen:
	/*0x2002C9C*/ 															  BYTE 0x00 0x00 0xBC 0xEC
	/*0x2002CA0*/ BYTE 0x03 0x04 0x00 0x38 0x20 0x06 0x8C 0xC0 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002CB0*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFE 0xA0 0xF1 mCBF
	/*0x2002CC0*/ BYTE 0xC1 0xF9 0x87 0xE7 0x1F 0xF8 0xDF 0xFA 0xFF 0xFF 0xFF 0x8F 0x9F 0xCF 0x05 0x48
	/*0x2002CD0*/ BYTE 0x00 0x00 0x00 0x00 0x90 0x5C 0x00 0x02 0x00 0x00 0x05 0x00 0x00 0x00 0x00 0x88
	/*0x2002CE0*/ BYTE 0x7F 0x00 0x80 0x00 0x48 0x80 0x90 0x50 0x1B 0x14 0x04 0xC0 0x3F 0xA0 0x00 0x0C
	/*0x2002CF0*/ BYTE 0x00 0x31 0x02 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x3C 0x40 0x06 0x02
	/*0x2002D00*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x10 0x08 0x43 0x01 0x2E 0x00 0x00 0x00 0x00
	/*0x2002D10*/ BYTE 0x00 0x00 0x30 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x08 0x1E 0x0B 0x00
	/*0x2002D20*/ BYTE 0x00 0x00 0x00 0x1A 0x80 0x0A 0x00 0x00 0x00 0xFC 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002D30*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE0 0x96
	/*0x2002D40*/ BYTE 0x41 0xA0 0x34 0x0F 0x19 0x39 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002D50*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0xC0 0x84 0x34 0xC1 0x12 0x20 0x00 0x00 0x00 0x00
	/*0x2002D60*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xC8
	/*0x2002D70*/ BYTE 0x1F 0xAD 0x39 0x19 0x04 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002D80*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x02 0xF2 0x38 0x7C 0x4E 0xF2 0x03
	/*0x2002D90*/ BYTE 0xF7 0x70 0x3E 0x1B 0x00 0x00 0x00 0xE8 0x0F 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	/*0x2002DA0*/ BYTE 0x00 0x00 0x00 0x2D 0x79 0x10 0x47 0x01 0x80 0x2A 0x01 0x00 0xA6 0x00 0x00 0x00
	/*0x2002DB0*/ BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x04 0xFE 0xDF 0x6F
	/*0x2002DC0*/ BYTE 0xD7 0xA7 0x00 0x00 0x8F 0xF7 0x7F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	